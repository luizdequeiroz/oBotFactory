// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using domain;

namespace api.Migrations
{
    [DbContext(typeof(OBotFactoryContext))]
    partial class OBotFactoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("domain.Entities.Armor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BonusDescription")
                        .HasColumnType("text");

                    b.Property<int>("BonusValue")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PanaltyDescription")
                        .HasColumnType("text");

                    b.Property<int>("PenaltyValue")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Armors");
                });

            modelBuilder.Entity("domain.Entities.Capability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Capabilities");
                });

            modelBuilder.Entity("domain.Entities.Disadvantage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Disadvantages");
                });

            modelBuilder.Entity("domain.Entities.GenericAdvantage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("MSId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("MSId");

                    b.ToTable("GenericAdvantages");
                });

            modelBuilder.Entity("domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("DifficultyDescription")
                        .HasColumnType("text");

                    b.Property<int>("DifficultyValue")
                        .HasColumnType("integer");

                    b.Property<string>("EffectDescription")
                        .HasColumnType("text");

                    b.Property<int>("EffectValue")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("domain.Entities.MS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Annotations")
                        .HasColumnType("text");

                    b.Property<string>("Archetype")
                        .HasColumnType("text");

                    b.Property<string>("CharacterName")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("Experience")
                        .HasColumnType("integer");

                    b.Property<string>("GenericAdvantageLabel")
                        .HasColumnType("text");

                    b.Property<int>("GenericTestDiceFaceQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("GenericTestDiceLabel")
                        .HasColumnType("text");

                    b.Property<int>("GenericTestDiceQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("HealthPoints")
                        .HasColumnType("integer");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("MentalTestDiceFaceQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("MentalTestDiceQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("PhysicalTestDiceFaceQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("PhysicalTestDiceQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("WeightCapacity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("MSs");
                });

            modelBuilder.Entity("domain.Entities.SheetArmor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ArmorId")
                        .HasColumnType("integer");

                    b.Property<bool>("Equipped")
                        .HasColumnType("boolean");

                    b.Property<int?>("MSId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TestValue")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ArmorId");

                    b.HasIndex("MSId");

                    b.ToTable("SheetArmors");
                });

            modelBuilder.Entity("domain.Entities.SheetCapabilty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CapabilityId")
                        .HasColumnType("integer");

                    b.Property<int?>("MSId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TestValue")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CapabilityId");

                    b.HasIndex("MSId");

                    b.ToTable("SheetCapabilties");
                });

            modelBuilder.Entity("domain.Entities.SheetDisadvantage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DisadvantageId")
                        .HasColumnType("integer");

                    b.Property<int?>("MSId")
                        .HasColumnType("integer");

                    b.Property<int?>("ModifierValue")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("TestDiceFaceQuantity")
                        .HasColumnType("integer");

                    b.Property<int?>("TestDiceQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("TestValue")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("DisadvantageId");

                    b.HasIndex("MSId");

                    b.ToTable("SheetDisadvantages");
                });

            modelBuilder.Entity("domain.Entities.SheetGenericAdvantage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("GenericAdvantageId")
                        .HasColumnType("integer");

                    b.Property<int?>("MSId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TestValue")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("GenericAdvantageId");

                    b.HasIndex("MSId");

                    b.ToTable("SheetGenericAdvantages");
                });

            modelBuilder.Entity("domain.Entities.SheetItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Equipped")
                        .HasColumnType("boolean");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int?>("MSId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TestValue")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("MSId");

                    b.ToTable("SheetItems");
                });

            modelBuilder.Entity("domain.Entities.SheetSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("MSId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.Property<int>("TestValue")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("MSId");

                    b.HasIndex("SkillId");

                    b.ToTable("SheetSkills");
                });

            modelBuilder.Entity("domain.Entities.SheetWeapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Equipped")
                        .HasColumnType("boolean");

                    b.Property<int?>("MSId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("TestValue")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("WeaponId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MSId");

                    b.HasIndex("WeaponId");

                    b.ToTable("SheetWeapons");
                });

            modelBuilder.Entity("domain.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("domain.Entities.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("DifficultyDescription")
                        .HasColumnType("text");

                    b.Property<int>("DifficultyValue")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("domain.Entities.GenericAdvantage", b =>
                {
                    b.HasOne("domain.Entities.MS", null)
                        .WithMany("GenericAdvantages")
                        .HasForeignKey("MSId");
                });

            modelBuilder.Entity("domain.Entities.MS", b =>
                {
                    b.HasOne("domain.Entities.User", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("domain.Entities.SheetArmor", b =>
                {
                    b.HasOne("domain.Entities.Item", "Armor")
                        .WithMany()
                        .HasForeignKey("ArmorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("domain.Entities.MS", "MS")
                        .WithMany("Armors")
                        .HasForeignKey("MSId");

                    b.Navigation("Armor");

                    b.Navigation("MS");
                });

            modelBuilder.Entity("domain.Entities.SheetCapabilty", b =>
                {
                    b.HasOne("domain.Entities.Capability", "Capability")
                        .WithMany()
                        .HasForeignKey("CapabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("domain.Entities.MS", "MS")
                        .WithMany("PhysicalCapabilities")
                        .HasForeignKey("MSId");

                    b.Navigation("Capability");

                    b.Navigation("MS");
                });

            modelBuilder.Entity("domain.Entities.SheetDisadvantage", b =>
                {
                    b.HasOne("domain.Entities.Disadvantage", "Disadvantage")
                        .WithMany()
                        .HasForeignKey("DisadvantageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("domain.Entities.MS", "MS")
                        .WithMany("Disadvantages")
                        .HasForeignKey("MSId");

                    b.Navigation("Disadvantage");

                    b.Navigation("MS");
                });

            modelBuilder.Entity("domain.Entities.SheetGenericAdvantage", b =>
                {
                    b.HasOne("domain.Entities.GenericAdvantage", "GenericAdvantage")
                        .WithMany()
                        .HasForeignKey("GenericAdvantageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("domain.Entities.MS", "MS")
                        .WithMany()
                        .HasForeignKey("MSId");

                    b.Navigation("GenericAdvantage");

                    b.Navigation("MS");
                });

            modelBuilder.Entity("domain.Entities.SheetItem", b =>
                {
                    b.HasOne("domain.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("domain.Entities.MS", "MS")
                        .WithMany("Items")
                        .HasForeignKey("MSId");

                    b.Navigation("Item");

                    b.Navigation("MS");
                });

            modelBuilder.Entity("domain.Entities.SheetSkill", b =>
                {
                    b.HasOne("domain.Entities.MS", "MS")
                        .WithMany("MentalSkills")
                        .HasForeignKey("MSId");

                    b.HasOne("domain.Entities.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MS");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("domain.Entities.SheetWeapon", b =>
                {
                    b.HasOne("domain.Entities.MS", "MS")
                        .WithMany("Weapons")
                        .HasForeignKey("MSId");

                    b.HasOne("domain.Entities.Weapon", "Weapon")
                        .WithMany()
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MS");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("domain.Entities.MS", b =>
                {
                    b.Navigation("Armors");

                    b.Navigation("Disadvantages");

                    b.Navigation("GenericAdvantages");

                    b.Navigation("Items");

                    b.Navigation("MentalSkills");

                    b.Navigation("PhysicalCapabilities");

                    b.Navigation("Weapons");
                });
#pragma warning restore 612, 618
        }
    }
}
